#!/usr/bin/env bash
# bin/compile <build-dir> <cache-dir>

set -e
set -o pipefail

BIN_DIR=$(cd $(dirname $0); pwd)
ROOT_DIR=$(dirname $BIN_DIR)

BUILD_DIR=$1
CACHE_DIR=$2

DEFAULT_SWIFT_VERSION="DEVELOPMENT-SNAPSHOT-2016-02-08-a"
CLANG_VERSION=3.7.0

mkdir -p "$CACHE_DIR"

# Fetch swiftenv
unset GIT_DIR
git submodule update --init --recursive >/dev/null

# Activate swiftenv
export SWIFTENV_ROOT="$CACHE_DIR/swiftenv"
export PATH="$ROOT_DIR/swiftenv/bin:$PATH"
eval "$(swiftenv init -)"

if ! [ -f "$BUILD_DIR/.swift-version" ] && [ -z "$SWIFT_VERSION" ]; then
  export SWIFT_VERSION="$DEFAULT_SWIFT_VERSION"
fi

# Pre compile hook
source "$BIN_DIR/steps/hooks/pre_compile"

# Install Swift
cd "$BUILD_DIR"
SWIFT_PREFIX="$(swiftenv prefix || true)"
if ! [ -d "$SWIFT_PREFIX" ]; then
  VERSION="$(env DONT_CHECK=true swiftenv version-name)"
  echo "-----> Installing $VERSION"
  swiftenv install
else
  swiftenv rehash
fi

if [[ ! -d "$CACHE_DIR/clang-$CLANG_VERSION" ]]; then
  cd $CACHE_DIR
  echo "-----> Installing clang-$CLANG_VERSION"
  mkdir -p "clang-$CLANG_VERSION"
  curl http://llvm.org/releases/$CLANG_VERSION/clang+llvm-$CLANG_VERSION-x86_64-linux-gnu-ubuntu-14.04.tar.xz -s | xz -d -c | tar x -C clang-$CLANG_VERSION &> /dev/null
fi

export PATH="$CACHE_DIR/clang-$CLANG_VERSION/clang+llvm-$CLANG_VERSION-x86_64-linux-gnu-ubuntu-14.04/bin:$PATH"

# Install Zewo dependency

git clone https://github.com/Zewo/libvenice.git && cd libvenice && \
    chmod 755 -R . && \
    make && \
    make package && \
    dpkg -i libvenice.deb

git clone https://github.com/Zewo/http_parser.git && cd http_parser && \
    chmod 755 -R . && \
    make && \
    make package && \
    dpkg -i http_parser.deb

git clone https://github.com/Zewo/uri_parser.git && cd uri_parser && \
    chmod 755 -R . && \
    make && \
    make package && \
    dpkg -i uri_parser.deb

# Build Package

cd $BUILD_DIR
echo "-----> Building Package"
swift build --configuration release

# These should be statically linked, seems a swift bug
echo "-----> Copying dynamic libraries"
mkdir -p $BUILD_DIR/.swift-lib
SWIFT_PREFIX="$(swiftenv prefix)"
cp $SWIFT_PREFIX/usr/lib/swift/linux/*.so $BUILD_DIR/.swift-lib

echo "-----> Copying binaries to 'bin'"
mkdir -p $BUILD_DIR/.swift-bin
find $BUILD_DIR/.build/release -type f -perm /a+x -exec cp {} $BUILD_DIR/.swift-bin \;

# Setup application environment
PROFILE_PATH="$BUILD_DIR/.profile.d/swift.sh"
mkdir -p $BUILD_DIR/.profile.d
set-env() {
  echo "export $1=$2" >> $PROFILE_PATH
}
set-env PATH '$HOME/.swift-bin:$PATH'
set-env LD_LIBRARY_PATH '$HOME/.swift-lib'


source "$BIN_DIR/steps/hooks/post_compile"
